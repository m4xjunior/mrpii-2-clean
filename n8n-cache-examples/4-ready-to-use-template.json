{
  "name": "Machines API with Cache",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "maquinas",
        "responseMode": "lastNode",
        "options": {}
      },
      "name": "Webhook",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [250, 300]
    },
    {
      "parameters": {
        "functionCode": "// ========================================\n// Cache Check - TTL: 30 segundos\n// ========================================\n\nconst CACHE_TTL_SECONDS = 30;\nconst CACHE_KEY = 'maquinas_all';\n\n// Tentar obter do cache global\nconst cache = $workflow.staticData;\n\nif (cache[CACHE_KEY]) {\n  const age = (Date.now() - cache[CACHE_KEY].timestamp) / 1000;\n  \n  if (age < CACHE_TTL_SECONDS) {\n    console.log(`✅ Cache HIT (${age.toFixed(1)}s old)`);\n    \n    return {\n      json: {\n        fromCache: true,\n        cacheAge: age,\n        data: cache[CACHE_KEY].data\n      }\n    };\n  }\n  \n  console.log(`❌ Cache EXPIRED (${age.toFixed(1)}s old)`);\n}\n\nconsole.log('❌ Cache MISS - fetching fresh data');\n\nreturn {\n  json: {\n    fromCache: false,\n    fetchFresh: true\n  }\n};"
      },
      "name": "Check Cache",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [450, 300]
    },
    {
      "parameters": {
        "conditions": {
          "boolean": [
            {
              "value1": "={{ $json.fromCache }}",
              "value2": true
            }
          ]
        }
      },
      "name": "Cache Hit?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [650, 300]
    },
    {
      "parameters": {
        "functionCode": "// ========================================\n// Return Cached Data\n// ========================================\n\nconst input = $input.first().json;\n\nreturn {\n  json: input.data\n};"
      },
      "name": "Return Cache",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [850, 200]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "-- Sua query SQL aqui\nSELECT \n  Cod_maquina,\n  desc_maquina,\n  -- outros campos...\nFROM Maquinas\nWHERE ativo = 1",
        "options": {}
      },
      "name": "Query Database",
      "type": "n8n-nodes-base.mssql",
      "typeVersion": 2,
      "position": [850, 400],
      "credentials": {
        "mssql": {
          "id": "1",
          "name": "SCADA SQL Server"
        }
      }
    },
    {
      "parameters": {
        "functionCode": "// ========================================\n// Process Data & Update Cache\n// ========================================\n\nconst data = $input.all();\n\n// Processar dados conforme necessário\nconst processed = data.map(item => ({\n  ...item.json,\n  // Adicionar campos calculados se necessário\n}));\n\n// Salvar no cache global\nconst cache = $workflow.staticData;\ncache['maquinas_all'] = {\n  timestamp: Date.now(),\n  data: processed,\n  cachedAt: new Date().toISOString()\n};\n\nconsole.log('💾 Cache SAVED');\n\nreturn processed.map(item => ({ json: item }));"
      },
      "name": "Save to Cache",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [1050, 400]
    },
    {
      "parameters": {},
      "name": "Merge Results",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2,
      "position": [1050, 300]
    }
  ],
  "connections": {
    "Webhook": {
      "main": [
        [
          {
            "node": "Check Cache",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Cache": {
      "main": [
        [
          {
            "node": "Cache Hit?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cache Hit?": {
      "main": [
        [
          {
            "node": "Return Cache",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Query Database",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Query Database": {
      "main": [
        [
          {
            "node": "Save to Cache",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Return Cache": {
      "main": [
        [
          {
            "node": "Merge Results",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Save to Cache": {
      "main": [
        [
          {
            "node": "Merge Results",
            "type": "main",
            "index": 1
          }
        ]
      ]
    }
  }
}
